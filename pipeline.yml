name: Maven CI

on:
  push:
    branches:
      - yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: sudo apt-get install -y yq

      - name: Load variables from var.yml
        id: vars
        run: |
          export SONAR_PROJECT_KEY=$(yq '.SONAR_PROJECT_KEY' var.yml)
          export SONAR_PROJECT_NAME=$(yq '.SONAR_PROJECT_NAME' var.yml)
          export SONAR_HOST_URL=$(yq '.SONAR_HOST_URL' var.yml)
          echo "SONAR_PROJECT_KEY=$SONAR_PROJECT_KEY" >> $GITHUB_ENV
          echo "SONAR_PROJECT_NAME=$SONAR_PROJECT_NAME" >> $GITHUB_ENV
          echo "SONAR_HOST_URL=$SONAR_HOST_URL" >> $GITHUB_ENV

      - name: Show IP address
        run: ip addr show

      - name: Show branch name
        run: echo "${{ github.ref_name }}"

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Show Maven version
        run: mvn --version

      - name: Build with Maven
        working-directory: KtJenkins
        run: mvn clean package

      - name: Run App and generate report
        working-directory: KtJenkins
        run: java -cp target/KtJenkins-1.0-SNAPSHOT.jar com.KtJenkins.app.App > ../Reports.txt

      - name: SonarQube Scan
        working-directory: KtJenkins
        env:
          SONAR_TOKEN: ${{ secrets.SonarQubeEJH }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName='${{ env.SONAR_PROJECT_NAME }}' \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.login=$SonarQubeEJH

      - name: Upload Reports.txt artifact
        uses: actions/upload-artifact@v4
        with:
          name: Reports
          path: Reports.txt

      - name: Clean workspace
        run: git clean -fdx